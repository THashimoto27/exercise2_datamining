#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
save.image("data.RData")
cbind(sum_base2=sum(result_step2$predict_base2), sum_preduct=sum(result_step2$predict_model), sum_actual=sum(result_step2$actual))
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adult,data=hotels_dev_train)
View(hotels_dev_train)
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults,data=hotels_dev_train)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
#save.image("data.RData")
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults,data=hotels_dev_train)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
#save.image("data.RData")
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults+customer_type+is_repeated_guest,data=hotels_dev_train)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
#save.image("data.RData")
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults,data=hotels_dev_train)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
#save.image("data.RData")
rmse1=rmse(baseline1,hotels_dev_test)
rmse2=rmse(baseline2,hotels_dev_test)
rmse3=rmse(model,hotels_dev_test)
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults,data=hotels_dev_train)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
rmse1=rmse(baseline1,hotels_dev_test)
rmse2=rmse(baseline2,hotels_dev_test)
rmse3=rmse(model,hotels_dev_test)
#save.image("data.RData")
hotels_dev <- read.csv('hotels_dev.csv')
hotels_dev_split = initial_split(hotels_dev, prop = 0.8)
hotels_dev_train= training(hotels_dev_split)
hotels_dev_test = testing(hotels_dev_split)
# Models
baseline1 <- glm(children~market_segment+adults+customer_type+is_repeated_guest,data=hotels_dev_train, family=binomial)
baseline2 <- glm(children~.-arrival_date,data=hotels_dev_train, family=binomial)
#model <- glm(children~.-arrival_date+year(arrival_date)+month(arrival_date)+average_daily_rate:adults+days_in_waiting_list:adults+ stays_in_weekend_nights :adults+total_of_special_requests:adults+booking_changes:average_daily_rate+booking_changes:days_in_waiting_list+lead_time:booking_changes+lead_time^2,data=hotels_dev_train)
model <-glm(children~adults,data=hotels_dev_train, family=binomial)
## (*)Other glms
## if add arrival year/month/date to the base line 2, the correction of the prediction is larger than that of the baseline 2
## And, I add three polynominal parameters()
## Caluculation of the variation "apply(hotels_dev_train, 2, sd)"
#                     hotel                      lead_time        stays_in_weekend_nights           stays_in_weekend_nights
#                        NA                     91.1969864                      0.9870792                      1.9086186
#                    adults                       children                           meal                 market_segment
#                 0.5086470                      0.2743685                             NA                             NA
#      distribution_channel              is_repeated_guest         previous_cancellations previous_bookings_not_canceled
#                        NA                      0.2036092                      0.2917516                      1.7965860
#        reserved_room_type             assigned_room_type                booking_changes                   deposit_type
#                        NA                             NA                      0.7316105                             NA
#      days_in_waiting_list                  customer_type             average_daily_rate    required_car_parking_spaces
#                14.7206015                             NA                     48.7072715                             NA
# total_of_special_requests                   arrival_date
#                 0.8352343                             NA
## (**)Others attempts--- But the correction of the prediction is lower than that of the baseline 2
## glmstep_b1 <- step(baseline1, scope=~(.)^2)
##
## glm0 = glm(children ~ 1, data=hotels_dev_train, family=binomial)
## glm_forward = step(glm0, direction='forward',
## scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
##
##lm0 = lm(children ~ 1, data=hotels_dev_train)
##lm_forward0 = step(lm0, direction='forward',
##scope=~(market_segment+adults+customer_type+is_repeated_guest)^2)
# predict and rmse
predict1 <- predict(baseline1, newdata=hotels_dev_test, type='response')
predict2 <- predict(baseline2, newdata=hotels_dev_test, type='response')
predict3 <- predict(model, newdata=hotels_dev_test, type='response')
##predict4 <- predict(glm_forward, newdata=hotels_dev_test, type='response')
##predict5 <- predict(lm_forward, newdata=hotels_dev_test, type='response')
##predict6 <- predict(glmstep_b1, newdata=hotels_dev_test, type='response')
# predict
yhat_test1 = ifelse(predict1 > 0.5, 1, 0)
yhat_test2 = ifelse(predict2 > 0.5, 1, 0)
yhat_test3 = ifelse(predict3 > 0.5, 1, 0)
##yhat_test4 = ifelse(predict4 > 0.5, 1, 0)
##yhat_test5 = ifelse(predict5 > 0.5, 1, 0)
##yhat_test6 = ifelse(predict6 > 0.5, 1, 0)
confusion_out1= table(y = hotels_dev_test$children, yhat = yhat_test1)
confusion_out2= table(y = hotels_dev_test$children, yhat = yhat_test2)
confusion_out3= table(y = hotels_dev_test$children, yhat = yhat_test3)
##confusion_out4= table(y = hotels_dev_test$children, yhat = yhat_test4)
##confusion_out5= table(y = hotels_dev_test$children, yhat = yhat_test5)
##confusion_out6= table(y = hotels_dev_test$children, yhat = yhat_test6)
result1 = sum(diag(confusion_out1))/sum(confusion_out1)
result2 = sum(diag(confusion_out2))/sum(confusion_out2)
result3 = sum(diag(confusion_out3))/sum(confusion_out3)
##result4 = sum(diag(confusion_out4))/sum(confusion_out4)
##result5 = sum(diag(confusion_out5))/sum(confusion_out5)
##result6 = sum(diag(confusion_out6))/sum(confusion_out6)
rmse1=rmse(baseline1,hotels_dev_test)
rmse2=rmse(baseline2,hotels_dev_test)
rmse3=rmse(model,hotels_dev_test)
#save.image("data.RData")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
load("data.RData")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
load("data.RData")
german_credit <- read.csv('german_credit.csv')
View(german_credit)
View(german_credit)
# Plot Default hisory
ggplot(data =german_credit)+ geom_col(aes(x=history, y=default))
View(german_credit)
rlang::last_error()
# Plot Default hisory
ggplot(data =german_credit)+ geom_col(aes(x=history, y=Default))
ggsave("./graph/default_history.png")
data <- german_credit %>% group_by(history)
data
data <- german_credit %>% group_by(history) %>% summarize(sum(Default))
data
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default))
data
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=count())
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=ncol()))
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=ncol(Default)))
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=ncol(Default))
data
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=n())
data
data <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=n(), prob = sum/num)
data
data_credit <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=n(), prob = sum/num)
ggplot(data =data_credit)+ geom_col(aes(x=history, y=prob))
ggsave("./graph/default_history.png")
# Plot Default hisory
data_credit <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=n(), prob = sum/num)
ggplot(data =data_credit)+ geom_col(aes(x=history, y=prob))
ggsave("./graph/default_history.png")
# Plot Default hisory
data_credit <- german_credit %>% group_by(history) %>% summarize(sum = sum(Default), num=n(), prob = sum/num)
ggplot(data =data_credit)+ geom_col(aes(x=history, y=prob))
ggsave("./graph/default_history.png")
