maxK=200
## KNN
rmse = foreach(K = 2:maxK, .combine='rbind') %do% {
knn = knnreg(log(price) ~ ., data=Xtilde_train, k=K)
c(k=K,rmse=modelr::rmse(knn,Xtilde_test))
}%>% as.data.frame
Knnrmse = as.data.frame(cbind(Knnrmse, rmse$rmse))
rmse = foreach(K = 2:maxK, .combine='rbind') %do% {
knn = knnreg(log(price) ~ ., data=Xtilde_train, k=K)
c(k=K,rmse=modelr::rmse(knn,Xtilde_test))
}%>% as.data.frame
View(rmse)
View(model1)
View(knn)
View(model1)
View(saratoga_train)
View(saratoga_train)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
## Regression the linear model with all variables
## (because the more variables you will add to the model, the lower rmse you can get)
model1 = lm(log(price)~ .poly(lotSize,2), data=saratoga_train)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
## Regression the linear model with all variables
## (because the more variables you will add to the model, the lower rmse you can get)
model1 = lm(log(price)~ .poly(lotSize,2), data=saratoga_train)
model1 = lm(log(price)~ .+poly(lotSize,2), data=saratoga_train)
Results[i] = rmse(model1, saratoga_test)
model1 = lm(log(price)~ .+poly(lotSize,2), data=saratoga_train)
View(model1)
poly(lotSize,2)
poly(saratoga_train$lotSize,2)
model1 = lm(log(price)~ poly(.,2), data=saratoga_train)
model1 = lm(log(price)~ poly(saratoga_train,2), data=saratoga_train)
numeric_data <- saratoga_train[2:10]
nonnumeric_data <- saratoga_train[11:16]
numeric_data <- saratoga_train[2:10]
nonnumeric_data <- saratoga_train[11:16]
model1 = lm(log(price)~ poly(numeric_data,2)+nonnumeric_data)
model1 = lm(log(saratoga_train$price)~ poly(numeric_data,2)+nonnumeric_data)
View(model1)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
numeric_data <- saratoga_train[2:10]
nonnumeric_data <- saratoga_train[11:16]
model1 = lm(log(saratoga_train$price)~ poly(numeric_data,2)+nonnumeric_data)
View(model1)
model1 = lm(log(price)~ poly(lotSize,2), data=saratoga_train)
View(model1)
model1 = lm(log(price)~ .+poly(lotSize,2), data=saratoga_train)
View(model1)
View(saratoga_train)
model1 = lm(log(price)~ .+poly(c(lotSize,rooms),2), data=saratoga_train)
model1 = lm(log(price)~ .+polym(lotSize,rooms,2), data=saratoga_train)
model1 = lm(log(price)~ .+polym(lotSize,rooms,degree = 2, raw=TRUE), data=saratoga_train)
View(model1)
View(saratoga_train)
model1 = lm(log(price)~ .+polym(lotSize,age,degree = 2)+polym(lotSize,rooms,degree = 2), data=saratoga_train)
colnames(saratoga_train)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(sjmisc)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)
library(lubridate)
library(olsrr)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
colnames(spratoga_test)
colnames(saratoga_test)
saratoga_test[,1]*saratoga_test[,1]
saratoga_test[,1]
saratoga_test[,1]*saratoga_test[,1]
saratoga_test[,1]%*%saratoga_test[,1]
saratoga_test[,1]*saratoga_test[,1]
saratoga_test[,1]
model1 = lm(log(price)~ polym(saratoga_train,saratoga_train,degree = 2), data=saratoga_train)
test = polym(saratoga_train,saratoga_train,degree = 2)
test = polym(saratoga_train,degree = 2)
test = polym(saratoga_train,saratoga_train,degree = 2)
test = apply(saratoga_train,2,polym)
test = apply(saratoga_train,1,polym)
test = apply(saratoga_train,2,function(x){
mm[,x] %*% mm[,x]
})
test = sapply(saratoga_train,function(x){
mm[,x] %*% mm[,x]
})
saratoga_train[,1]
saratoga_train[,1]*saratoga_train[,1]
saratoga_train[,1]%*%saratoga_train[,1]
saratoga_train[,1]*saratoga_train[,1]
test = saratoga_train[,1]*saratoga_train[,1]
view(testResults)
view(test)
View(saratoga_train)
test = saratoga_train[1]
View(test)
test = saratoga_train[1]*saratoga_train[1]
View(test)
saratoga_train[1]
]saratoga_train[1]+saratoga_train[1]
saratoga_train[1]+saratoga_train[1]
test = saratoga_train[1] %*% saratoga_train[1]
test = saratoga_train[1] %*% saratoga_train[1]
saratoga_train[1] %*% saratoga_train[1]
saratoga_train[,1] %*% saratoga_train[,1]
test = saratoga_train[,1] * saratoga_train[,1]
saratoga_train[,1]
saratoga_train[,1] * saratoga_train[,2]
test = saratoga_train[,1] * saratoga_train[,2]
test = saratoga_train[,1]^2
View(saratoga_train)
tmp = as.data.frame(saratoga_train[,1]^2)
colnames(tmp) <- colnames(saratoga_train[,1]+"2")
View(tmp)
colnames(tmp)
View(tmp)
colnames(saratoga_train[,1])+"2"
olnames(saratoga_train[,1])
olnames(saratoga_train[1])
olnames(saratoga_train)
colnames(saratoga_train)
colnames(saratoga_train[1])
colnames(saratoga_train[,1])
tmp = as.data.frame(saratoga_train[,1]^2)
colnames(tmp) <- colnames(saratoga_train[1])+"2"
View(tmp)
tmp = as.data.frame(saratoga_train[,1]^2)
colnames(tmp) <- paste(colnames(saratoga_train[1]),"2")
View(tmp)
data <- NULL
for (i in 1:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = saratoga_train[,i] * saratoga_train[,j]
colnames(tmp) <- paste(colnames(saratoga_train[i]),"_",colnames(saratoga_train[,j]))
}
data <- c(data,tmp)
}
}
tmp = saratoga_train[,1] * saratoga_train[,2]
colnames(tmp) <- paste(colnames(saratoga_train[1]),"_",colnames(saratoga_train[,2]))
tmp = saratoga_train[,1] * saratoga_train[,2]
data <- NULL
for (i in 1:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = as.data.frame(saratoga_train[,i] * saratoga_train[,j])
colnames(tmp) <- paste(colnames(saratoga_train[i]),"_",colnames(saratoga_train[,j]))
}
data <- as.frame(c(data,tmp))
}
}
data <- NULL
for (i in 1:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = as.data.frame(saratoga_train[,i] * saratoga_train[,j])
colnames(tmp) <- paste(colnames(saratoga_train[i]),"_",colnames(saratoga_train[,j]))
}
data <- as.data.frame(c(data,tmp))
}
}
View(data)
tmp = as.data.frame(saratoga_train[,1] * saratoga_train[,1])
colnames(tmp) <- paste(colnames(saratoga_train[1]),"_",colnames(saratoga_train[,1]))
tmp = as.data.frame(saratoga_train[,1] * saratoga_train[,1])
colnames(tmp) <- paste(colnames(saratoga_train[1]),"_",colnames(saratoga_train[,1]))
View(tmp)
data <- NULL
for (i in 1:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = as.data.frame(saratoga_train[,i] * saratoga_train[,j])
colnames(tmp) <- paste(colnames(saratoga_train[,i]),"_",colnames(saratoga_train[,j]))
}
data <- as.data.frame(c(data,tmp))
}
}
View(data)
tmp = as.data.frame(saratoga_train[,1] * saratoga_train[,2])
colnames(tmp) <- paste(colnames(saratoga_train[,1]),"_",colnames(saratoga_train[,2]))
View(tmp)
colnames(saratoga_train[,1])
data <- NULL
for (i in 1:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = as.data.frame(saratoga_train[,i] * saratoga_train[,j])
colnames(tmp) <- paste(colnames(saratoga_train[i]),"_",colnames(saratoga_train[j]))
}
data <- as.data.frame(c(data,tmp))
}
}
View(data)
View(saratoga_train)
data <- NULL
for (i in 2:10){
for (j in i:10){
if(j==i){
tmp = as.data.frame(saratoga_train[,j]^2)
colnames(tmp) <- paste(colnames(saratoga_train[j]),"^2")
}else
{
tmp = as.data.frame(saratoga_train[,i] * saratoga_train[,j])
colnames(tmp) <- paste(colnames(saratoga_train[i]),"_",colnames(saratoga_train[j]))
}
data <- as.data.frame(c(data,tmp))
}
}
View(data)
data <- as.data.frame(c(data,saratoga_train[1],saratoga_train[11:16]))
View(data)
data_train <- as.data.frame(c(all_polym(data_train),saratoga_train[1],saratoga_train[11:16]))
all_polym <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"^2")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(data,tmp))
}
}
return(result)
}
data_train <- as.data.frame(c(saratoga_train[1],all_polym(saratoga_train[2:10]),saratoga_train[11:16]))
View(data_train)
all_polym2 <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"^2")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(data,tmp))
}
}
return(result)
}
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
View(data_train)
all_polym2(saratoga_train[2:10])
View(saratoga_train)
ncol(saratoga_train[2:10])
View(saratoga_train)
View(data_train)
View(data_train)
remove(data_train)
all_polym2 <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"^2")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(data,tmp))
}
}
return(result)
}
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
View(data_train)
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:9]),saratoga_train[11:16]))
View(data_train)
remove(data_train)
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:9]),saratoga_train[11:16]))
View(data_train)
all_polym2 <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"sq")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(data,tmp))
}
}
return(result)
}
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:9]),saratoga_train[11:16]))
View(data_train)
result <- NULL
tmp = as.data.frame(dataset[,1]^2)
tmp = as.data.frame(saratoga_train[,1]^2)
colnames(tmp) <- paste(colnames(saratoga_train[1]),"sq")
View(tmp)
all_polym2 <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"sq")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(result,tmp))
}
}
return(result)
}
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
View(data_train)
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
data_test <- as.data.frame(c(saratoga_test[1],all_polym2(saratoga_test[2:10]),saratoga_test[11:16]))
## Regression the linear model with all variables
## (because the more variables you will add to the model, the lower rmse you can get)
model1 = lm(log(price)~ ., data=data_train)
Lmrmse[1] = rmse(model1,data_test)
Lmrmse =NULL
Lmrmse[1] = rmse(model1,data_test)
X_train <- saratoga_train[,2:10]
X_test <- saratoga_test[,2:10]
scale_train = apply(X_train, 2, sd) # calculate std dev for each column
Xtilde_train = scale(X_train, scale = scale_train) %>% as.data.frame
Xtilde_test = scale(X_test, scale = scale_train) %>% as.data.frame # use the training set scales!
Xtilde_train = as.data.frame(cbind(Xtilde_train, saratoga_train['price'],saratoga_train[,11:16]))
Xtilde_test = as.data.frame(cbind(Xtilde_test, saratoga_test['price'],saratoga_test[,11:16]))
maxK=200
## KNN
knnrmse = foreach(K = 2:maxK, .combine='rbind') %do% {
knn = knnreg(log(price) ~ ., data=Xtilde_train, k=K)
c(k=K,rmse=modelr::rmse(knn,Xtilde_test))
}%>% as.data.frame
Knnrmse = as.data.frame(cbind(Knnrmse, knnrmse$rmse))
# Setup
data(SaratogaHouses)
Lmrmse =NULL
Knnrmse =NULL
# Function: Create polym2
## Input: Dataset
## Output: New Dataset
## Create polynominal term by each column
## Example: dataframe(column 1*column1, column 1*column 2, .... column i*column j,....)
all_polym2 <- function (dataset){
result <- NULL
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"sq")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(result,tmp))
}
}
return(result)
}
# Estimation
for (i in 1:10){
## Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
data_test <- as.data.frame(c(saratoga_test[1],all_polym2(saratoga_test[2:10]),saratoga_test[11:16]))
## Regression the linear model with all variables
## (because the more variables you will add to the model, the lower rmse you can get)
model1 = lm(log(price)~ ., data=data_train)
Lmrmse[i] = rmse(model1,data_test)
## Regression the Knn model with all variables
### now rescale for KNN with variables else dummies
X_train <- saratoga_train[,2:10]
X_test <- saratoga_test[,2:10]
scale_train = apply(X_train, 2, sd) # calculate std dev for each column
Xtilde_train = scale(X_train, scale = scale_train) %>% as.data.frame
Xtilde_test = scale(X_test, scale = scale_train) %>% as.data.frame # use the training set scales!
Xtilde_train = as.data.frame(cbind(Xtilde_train, saratoga_train['price'],saratoga_train[,11:16]))
Xtilde_test = as.data.frame(cbind(Xtilde_test, saratoga_test['price'],saratoga_test[,11:16]))
maxK=200
## KNN
knnrmse = foreach(K = 2:maxK, .combine='rbind') %do% {
knn = knnreg(log(price) ~ ., data=Xtilde_train, k=K)
c(k=K,rmse=modelr::rmse(knn,Xtilde_test))
}%>% as.data.frame
Knnrmse = as.data.frame(cbind(Knnrmse, knnrmse$rmse))
}
## Compared the result of the linear and knn( knn' rmse selected by the minimum of rmse)
result_lm = mean(Lmrmse, 1, mean, na.rm=TRUE)
result_knn = as.data.frame(apply(Knnrmse[,1:10], 1, mean, na.rm=TRUE))
result_knn =result_knn[result_knn ==min(result_knn ),]
result = c(result_lm,result_knn)
#summary(model1)
summary(model1)
View(data_train)
# Setup
data(SaratogaHouses)
Lmrmse =NULL
Knnrmse =NULL
# Function: Create polym2
## Input: Dataset
## Output: New Dataset
## Create polynominal term by each column
## Example: dataframe(column 1*column1, column 1*column 2, .... column i*column j,....)
all_polym2 <- function (dataset){
result <- dataset
for (i in 1:ncol(dataset)){
for (j in i:ncol(dataset)){
if(j==i){
tmp = as.data.frame(dataset[,j]^2)
colnames(tmp) <- paste(colnames(dataset[j]),"sq")
}else
{
tmp = as.data.frame(dataset[,i] * dataset[,j])
colnames(tmp) <- paste(colnames(dataset[i]),"_",colnames(dataset[j]))
}
result <- as.data.frame(c(result,tmp))
}
}
return(result)
}
# Estimation
for (i in 1:10){
## Split into training and testing sets
saratoga_split = initial_split(SaratogaHouses, prop = 0.8)
saratoga_train = training(saratoga_split)
saratoga_test = testing(saratoga_split)
data_train <- as.data.frame(c(saratoga_train[1],all_polym2(saratoga_train[2:10]),saratoga_train[11:16]))
data_test <- as.data.frame(c(saratoga_test[1],all_polym2(saratoga_test[2:10]),saratoga_test[11:16]))
## Regression the linear model with all variables
## (because the more variables you will add to the model, the lower rmse you can get)
model1 = lm(log(price)~ ., data=data_train)
Lmrmse[i] = rmse(model1,data_test)
## Regression the Knn model with all variables
### now rescale for KNN with variables else dummies
X_train <- saratoga_train[,2:10]
X_test <- saratoga_test[,2:10]
scale_train = apply(X_train, 2, sd) # calculate std dev for each column
Xtilde_train = scale(X_train, scale = scale_train) %>% as.data.frame
Xtilde_test = scale(X_test, scale = scale_train) %>% as.data.frame # use the training set scales!
Xtilde_train = as.data.frame(cbind(Xtilde_train, saratoga_train['price'],saratoga_train[,11:16]))
Xtilde_test = as.data.frame(cbind(Xtilde_test, saratoga_test['price'],saratoga_test[,11:16]))
maxK=200
## KNN
knnrmse = foreach(K = 2:maxK, .combine='rbind') %do% {
knn = knnreg(log(price) ~ ., data=Xtilde_train, k=K)
c(k=K,rmse=modelr::rmse(knn,Xtilde_test))
}%>% as.data.frame
Knnrmse = as.data.frame(cbind(Knnrmse, knnrmse$rmse))
}
## Compared the result of the linear and knn( knn' rmse selected by the minimum of rmse)
result_lm = mean(Lmrmse, 1, mean, na.rm=TRUE)
result_knn = as.data.frame(apply(Knnrmse[,1:10], 1, mean, na.rm=TRUE))
result_knn =result_knn[result_knn ==min(result_knn ),]
result = c(result_lm,result_knn)
#summary(model1)
summary(model1)
